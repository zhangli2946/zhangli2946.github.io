<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on li 的 Blog</title>
    <link>http://zhangli2946.github.io/post/</link>
    <description>Recent content in Posts on li 的 Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Feb 2020 22:42:30 +0800</lastBuildDate>
    
	<atom:link href="http://zhangli2946.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go Module 与 私有库</title>
      <link>http://zhangli2946.github.io/post/go-module-%E4%B8%8E-%E7%A7%81%E6%9C%89%E5%BA%93/</link>
      <pubDate>Thu, 27 Feb 2020 22:42:30 +0800</pubDate>
      
      <guid>http://zhangli2946.github.io/post/go-module-%E4%B8%8E-%E7%A7%81%E6%9C%89%E5%BA%93/</guid>
      <description>[200~# go module 与 私有库
 由于公司 vcs 设置缘故 项目基本存在于 subgroup 下 且 import 路径也有属于 project 的 subdir 这就需要公司的 vcs 能够适应 ?go-get=1 访问 subdir 或 subgroup 时能给出正确的 clone 地址
 问题背景  公司 vcs 系统使用 gitlab-ce 10.6.5 版本 源码 module 保存在 subgroup 和 subdir 下 vcs 没有 https 端点
 调查范围  module get 的工作方式 gitlab 响应逻辑 正常工作的必要条件 认证 联通 编译  实际工作 服务搭建与配置 证书与签名  英文参考
 自签名证书 # 1.</description>
    </item>
    
    <item>
      <title>Init</title>
      <link>http://zhangli2946.github.io/post/init/</link>
      <pubDate>Sun, 16 Feb 2020 11:43:13 +0800</pubDate>
      
      <guid>http://zhangli2946.github.io/post/init/</guid>
      <description>release: build @cd zhangli2946.github.io &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git commit -m &amp;#34;update&amp;#34; &amp;amp;&amp;amp; git push build: hugo -D </description>
    </item>
    
    <item>
      <title>go module 访问私有库 (gitlab@11.10.4)</title>
      <link>http://zhangli2946.github.io/post/gomodule/</link>
      <pubDate>Sun, 16 Feb 2020 11:33:51 +0800</pubDate>
      
      <guid>http://zhangli2946.github.io/post/gomodule/</guid>
      <description>开发环境 配置  推荐 编译环境升级 go 1.13+
 启动 GOMOD 模式 设置 GO1111MODULE go env -w GO111MODULE=on
配置公有库依赖管理 设置 GOPROXY  go env -w GOPORXY=http://10.30.52.66:3000,direct
配置私有库依赖管理 设置 GOPRIVATE go env -w GOPRIVATE=$PRIVATE_REPO_HOST
设置 Git over HTTP(s) 免密 touch ~/.git-credentials echo &amp;#34;http://$PRIVATE_REPO_USERNAME:$$PRIVATE_REPO_TOKEN@$PRIVATE_REPO_HOST&amp;#34; &amp;gt;&amp;gt; ~/.git-credentials echo &amp;#34;https://$PRIVATE_REPO_USERNAME:$$PRIVATE_REPO_TOKEN@$PRIVATE_REPO_HOST&amp;#34; &amp;gt;&amp;gt; ~/.git-credentials git config --global credential.helper store (optional) 针对私有库 为自签名 https 证书   ubuntu
cp server.crt /usr/local/share/ca-certificates update-ca-certificates    centos
cp server.crt /etc/pki/ca-trust/source/anchors update-ca-trust    docker</description>
    </item>
    
  </channel>
</rss>